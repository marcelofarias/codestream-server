#!/bin/bash

# re-generate codestream config files and config templates for distribution

function diff_notify {
	local file=$1 ask=$2
	local ans
	if [ ! -f $file ]; then
		echo "$file is new"
		# echo mv $file.x $file
		mv $file.x $file
		return
	fi
	x=`diff $file $file.x|wc -l`
	if [ $x -gt 0 ]; then
		echo "$file has changed"
		if [ -n "$ask" ]; then
			echo -n "update it (y/N)? "
			read ans
			[ "$ans" != y ] && /bin/rm $file.x && echo "skipped" && return
		fi
		# echo mv $file.x $file
		mv $file.x $file
	else
		# echo "$file did not change"
		/bin/rm $file.x
	fi
}

[ -z "$KM_PKI" ] && echo "Set KM_PKI to the location of the PKI database (use -y to bypass prompts)" && exit 1
[ "$1" == "-y" ] && yes="" || yes=y
binDir=`dirname $0`
repoRoot=$(cd $binDir/.. && pwd)
srcDir=`dirname $repoRoot`
schemaVersion=`cat $repoRoot/parameters.version`

for p in `/bin/ls $repoRoot/profiles/*.json $repoRoot/parameters.json`
do
	echo "sorting $p"
	$binDir/process-profile --sort-json $p
done

echo "Current schema version is: $schemaVersion"
echo -n "Do you want to bump it for these latest writes (y/N)? "; read ans
if [ "$ans" == y -o "$ans" == yes ]; then
	expr $schemaVersion + 1 >$repoRoot/parameters.version
	schemaVersion=`cat $repoRoot/parameters.version`
	echo "Schema version is now: $schemaVersion"
fi

[ ! -d $repoRoot/../onprem-install ] && echo "$repoRoot/../onprem-install not found (pwd=`pwd`)" >&2 && exit 1
$binDir/process-profile --show-desc --out $repoRoot/README.parameter-definitions.json.x
diff_notify $repoRoot/README.parameter-definitions.json "$yes"

# create the config template for on-prem single host preview (beta version)
$binDir/process-profile --profile $repoRoot/profiles/onprem-single-host-preview-template.json --out $srcDir/onprem-install/config-templates/single-host-preview-minimal-cfg.json.template.beta.x
diff_notify $srcDir/onprem-install/config-templates/single-host-preview-minimal-cfg.json.template.beta "$yes"

# cloud configuration, all environments (consumed by developers via dt-update-secrets)
for csEnv in local ci pi pd qa prod
do
	$binDir/process-profile --profile $repoRoot/profiles/cloud.json --env $csEnv --out $KM_PKI/secrets/config/codestream-cloud_${csEnv}_${schemaVersion}_.json.x || exit 1
	diff_notify $KM_PKI/secrets/config/codestream-cloud_${csEnv}_${schemaVersion}_.json "$yes"
done

$binDir/process-profile --profile $repoRoot/profiles/onprem-development.json --env local --out $KM_PKI/secrets/config/onprem-development_local_${schemaVersion}_.json.template.x
diff_notify $KM_PKI/secrets/config/onprem-development_local_${schemaVersion}_.json.template "$yes"
