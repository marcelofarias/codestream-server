#!/bin/bash

# update boot strap files used when installing the onprem modules on instances

function usage {
	echo "usage: `basename $0` [--yes | -y] [--force-pkg]

    --yes | -y    automatically answer 'yes' to all interactive prompts (batch mode)
    --force-pkg   force creation of and upload overlay packages regardless if the configs have changed

    This script creates the onprem overlay config files (which are ultimately added on top of the
    codestream config templates for onprem installs) to setup a pre-canned onprem configuration
    used in R&D and testing.

    First it creates the overlay files from the profiles and secrets data and deposits them in
    the $KM
"
	exit 1
}

[ -z "$KM_PKI" ] && echo "KM_PKI undefined" && exit 1

answerYes=0
forcePkg=0
while [ -n "$*" ]; do
	case "$1" in
	--yes|-y)
		answerYes=1;;
	--force-pkg)
		forcePkg=1;;
	*)
		usage;;
	esac
	shift
done

binDir=`dirname $0`
repoRoot=$(cd $binDir/.. && pwd)
# srcDir=`dirname $repoRoot`
schemaVersion=`cat $repoRoot/parameters.version`

. $repoRoot/lib/update_funcs.sh

tmpDir=/tmp/x$$
mkdir $tmpDir
cp $repoRoot/etc/config-cache.template $tmpDir

# specialized overlay config files used for custom codestream configurations
for csEnv in avs mailonly
do
	[ -n "$verbose" ] && echo $binDir/process-profile --profile $repoRoot/profiles/onprem-overlays.json --env $csEnv --out $KM_PKI/secrets/config/onprem-overlays_${csEnv}_${schemaVersion}_.json.x
	$binDir/process-profile --profile $repoRoot/profiles/onprem-overlays.json --env $csEnv --out $KM_PKI/secrets/config/onprem-overlays_${csEnv}_${schemaVersion}_.json.x
	diff_notify $KM_PKI/secrets/config/onprem-overlays_${csEnv}_${schemaVersion}_.json "$yes"
	if [ $? -eq 0 -o $forcePkg -eq 1 ]; then
		pkgName=`grep ^onprem-overlays_${csEnv}: $repoRoot/etc/onprem-bootstrap-distribution | head -1 | cut -f2 -d:`
		if [ -z "$pkgName" ]; then
			echo "No bootstrap file name associated with this file"
		else
			echo -n "create and upload $pkgName (y/N)? "
			[ $answerYes -eq 0 ] && read ans || { echo "Y"; ans=y; }
			if [ "$ans" == y ]; then
				cp $KM_PKI/secrets/config/onprem-overlays_${csEnv}_${schemaVersion}_.json $tmpDir/custom-config-options.json
				if [ $? -eq 0 ]; then
					(cd $tmpDir && tar czpvf $pkgName custom-config-options.json config-cache.template)
					if [ $? -eq 0 ]; then
						echo aws s3 cp $tmpDir/$pkgName s3://codestream-ops/vmcfg/default/$pkgName --sse
						aws s3 cp $tmpDir/$pkgName s3://codestream-ops/vmcfg/default/$pkgName --sse
					fi
				fi
				/bin/rm $tmpDir/custom-config-options.json $tmpDir/$pkgName
			fi
		fi
	fi
done
/bin/rm -rf $tmpDir
exit 0
