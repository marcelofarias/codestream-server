//   OnPrem configuration for local development (on localhost)
//
//   ****  DO NOT EDIT THIS FILE - YOUR CHANGES WILL BE OVERWRITTEN   ****
//
//   Copy this template file to a new file in the same directory and complete it.
//   Use a symbolic link (~/.codestream/config/codestream-services-config.json)
//   to make one of the configs active for use with the default sandbox
//   configuration.
//
//   - Profile:        onprem-development.json
//   - Storage:        mongo
//   - Broadcast:      broadcaster
//   - Queuing:        rabbitMQ via docker
//         mac:             docker run -d -P --name csrabbitmq teamcodestream/rabbitmq-onprem:0.0.0
//         remote-linux:    docker run -d -P --network="host" --name csrabbitmq teamcodestream/rabbitmq-onprem:0.0.0
//   - Outbound mail:  NodeMailer/smtp (via your codestream gmail account)

{
	"apiServer": {
		"defaultEnv": {
			"dontWantAWS": true
		},
		"local": {
			"dontWantAWS": true
		}
	},
	"broadcastEngine": {
		"codestreamBroadcaster": {
			"ci": {
				"assetEnvironment": "dev",
				"logger": {},
				"runTimeEnvironment": "ci",
				"secrets": {
					"_loadSecretsFile": "codestream/ci-bcast-secrets.cfg"
				}
			},
			"defaultEnv": {
				"assetEnvironment": "dev",
				"logger": {},
				"runTimeEnvironment": "${CSSVC_ENV}",
				"secrets": {
					"_loadSecretsFile": "codestream/dev-bcast-secrets.cfg"
				}
			},
			"local": {
				"assetEnvironment": "local",
				"logger": {},
				"runTimeEnvironment": "local",
				"secrets": {
					"_loadSecretsFile": "codestream/local-bcast-secrets.cfg"
				}
			},
			"pi": {
				"assetEnvironment": "prod",
				"logger": {},
				"runTimeEnvironment": "pi",
				"secrets": {
					"_loadSecretsFile": "codestream/ci-bcast-secrets.cfg"
				}
			}
		}
	},
	"email": {
		"ci": {
			"replyToDomain": "ci.codestream.com",
			"senderEmail": "ci_alerts@codestream.com",
			"supportEmail": "ci_support@codestream.com"
		},
		"defaultEnv": {
			"emailTo": null,
			"replyToDomain": "${CSSVC_ENV}.codestream.com",
			"senderEmail": "${CSSVC_ENV}_alerts@codestream.com",
			"supportEmail": "${CSSVC_ENV}_support@codestream.com",
			"suppressEmails": false
		},
		"local": {}
	},
	"emailDeliveryService": {
		"defaultEnv": {
			"NodeMailer": {
				"host": "mail-relay.codestream.us",
				"port": 25,
				"secure": false
			}
		}
	},
	"inboundEmailServer": {
		"ci": {
			"assetEnvironment": "dev",
			"runTimeEnvironment": "ci"
		},
		"defaultEnv": {
			"assetEnvironment": "dev",
			"runTimeEnvironment": "${CSSVC_ENV}"
		},
		"local": {}
	},
	"integrations": {
		"asana": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "asana/dev.cfg"
				}
			}
		},
		"bitbucket": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "bitbucket/dev.cfg"
				}
			}
		},
		"devops": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "microsoft/devops-dev.cfg"
				}
			}
		},
		"github": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "github/dev.cfg"
				}
			}
		},
		"gitlab": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "gitlab/dev.cfg"
				}
			}
		},
		"jira": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "atlassian/dev.cfg"
				}
			}
		},
		"msteams": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "microsoft/teams-local.cfg"
				}
			}
		},
		"okta": {
			"localInstallation": {
				"defaultEnv": {
					"_loadSecretsFile": "okta/dev.cfg"
				}
			}
		},
		"slack": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "slack/dev-combined.cfg"
				}
			}
		},
		"trello": {
			"cloud": {
				"defaultEnv": {
					"_loadSecretsFile": "trello/codestreamops.cfg"
				}
			}
		},
		"youtrack": {
			"cloud": {
				"defaultEnv": {}
			}
		}
	},
	"outboundEmailServer": {
		"ci": {
			"assetEnvironment": "dev",
			"runTimeEnvironment": "ci"
		},
		"defaultEnv": {
			"assetEnvironment": "dev",
			"runTimeEnvironment": "${CSSVC_ENV}",
			"storage": {
				"mongo": {
					"url": "mongodb://${CSSVC_ENV}-api.codestream.us/codestream"
				}
			}
		},
		"local": {}
	},
	"queuingEngine": {
		"ci": {
			"awsSQS": {
				"outboundEmailQueueName": "ci_outboundEmail"
			}
		},
		"defaultEnv": {
			"awsSQS": {
				"outboundEmailQueueName": "${CSSVC_ENV}_outboundEmail"
			}
		},
		"local": {
			"rabbitmq": {}
		}
	},
	"sharedSecrets": {
		"ci": {
			"_loadSecretsFile": "codestream/ci-secrets.cfg"
		},
		"defaultEnv": {
			"_loadSecretsFile": "codestream/dev-secrets.cfg"
		},
		"local": {
			"_loadSecretsFile": "codestream/local-secrets.cfg"
		}
	},
	"ssl": {
		"defaultEnv": {
			"cafile": "/etc/pki/wildcard.codestream.us/wildcard.codestream.us-ca",
			"certfile": "/etc/pki/wildcard.codestream.us/wildcard.codestream.us-crt",
			"keyfile": "/etc/pki/wildcard.codestream.us/wildcard.codestream.us-key"
		},
		"local": {}
	},
	"storage": {
		"mongo": {
			"defaultEnv": {}
		}
	},
	"telemetry": {
		"intercom": {
			"defaultEnv": {
				"_loadSecretsFile": "intercom/dev.cfg"
			}
		},
		"segment": {
			"defaultEnv": {
				"_loadSecretsFile": "segment/dev-api.cfg"
			}
		}
	}
}
